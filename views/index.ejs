<!DOCTYPE html>
<html>
<head>
    <title>Carparko</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
    <link rel="stylesheet" href="style">
    <link rel="stylesheet" href="login">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@600&family=Roboto:wght@300;400&display=swap" rel="stylesheet">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css">

    <style>
      body {
          margin: 0;
          padding: 0;
          background-image: url('/images/background.jpg');
          background-size: cover;
          background-position: center;
          height: 50vh;
          display: flex;
          flex-direction: column;
        }
      
        header {
          text-align: center;
          padding: 20px;
          position: relative;
          z-index: 1; /* Ensure the header content appears on top of the background */
        }

        /* Add this CSS to your existing <style> section */
        header h1 {
            font-family: 'Montserrat', sans-serif; /* Use the custom font you included */
            /* You can also specify fallback fonts in case the custom font doesn't load */
            /* font-family: 'Roboto', Arial, sans-serif; */
            font-size: 70px; /* Change the font size to your desired value */
        }
      
        nav {
          background-color: #50473D;
          color: white;
        }

        footer {
          padding: 20px;
          background-color: #f8f9fa; /* Optional: Add a light background color to the footer for better readability */
        }
        .btn .btn-primary {
          background-color: #87CEFA;
          width: 150px; 
          height: 50px; 
          font: 100px;
        }

        /* Select the .nav-link class and apply the styles */
        .nav-link {
          color: white; /* Set the text color to white */
          font-size: 18px; /* Increase the font size to your desired value */
          /* You can also add other styles like text-decoration, if needed */
        }

        /* Optionally, you can style the links on hover and when they are active */
        .nav-link:hover {
          text-decoration: underline; /* Add underline on hover */
        }

        .nav-link.active {
          /* Add styles for the active link (e.g., when on the current page) */
          font-weight: bold; /* Make it bold, for example */
        }

        /* button {
          margin-top: 80px;
        } */
        .button {
          padding: 6px 24px; 
          border: 2px solid #fff;
          background: transparent;
          border-radius: 6px;
          color: white;
        }

        .custom-footer-bg {
    background-color: #50473D;
}

        /* Home */
.home {
    /* position: relative;  */
    height: 100vh;
    width: 100%;
    /* background-image: url(images/background.jpg); */
    background-size:cover; 
    background-position: center;
}

.home::before{
  content:'';
  position: absolute;
  height:100%;
  width: 100%;
  background-color: #50473D;
  z-index: 100;
  opacity: 0; 
  pointer-events: none;
  transition: all 0.5s ease-out;
}

.home.show::before{
  opacity: 1;
  pointer-events: auto;
}
/* Form */ 
.form_container {
    position: absolute; 
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(1.2);
    max-width:320px;
    width:100%;
    z-index: 101;
    background:#fff;
    padding:25px; 
    border-radius: 12px; 
    box-shadow: rgba(0,0,0,0.1);
    opacity:0;
    pointer-events: none;
    transition: all 0.4s ease-out;
}

.home.show .form_container {
  opacity: 1; 
  pointer-events: auto;
  transform: translate(-50%, -50%) scale(1);
}



.signup_form {
    display: none;
}

.form_container.active .signup_form{
  display: block;
}
.form_container.active .login_form{
  display: none;
}
.form_close {
    position: absolute;
    top: 10px; 
    right:20px; 
    color: #0b0217;
    font-size: 22px; 
    opacity:0.7;
    cursor: pointer; 
}

.form_container h2{
    font-size: 22px; 
    color: #0b0217; 
    text-align: center; 
}
.input_box {
    position: relative; 
    margin-top:30px; 
    width: 100%; 
    height: 40px; 
}

.input_box input {
    height: 100%; 
    width: 100%;
    border: none; 
    outline: none;
    padding: 0 30px; 
    color: #333;
    transition: all 0.2s ease; 
    border-bottom: 1.5px solid #aaaaaa;
}
.input_box input:focus {
    border-color: #007bff;
}

.input_box i{
    position: absolute; 
    top:50%; 
    transform: translateY(-50%);
    font-size: 20px; 
    color: #707070;
}

.input_box i.email,
.input_box i.password,
.input_box i.user{
    left: 0; 
}

.input_box input:focus ~ i.email,
.input_box input:focus ~ i.password{
   color: #007bff;
}

.input_box i.pw_hide {
    right:0; 
    font-size: 18px; 
    cursor: pointer;
}
.option_field {
    margin-top: 14px;
    display: flex; 
    align-items: center; 
    justify-content: space-between; 
}
.form_container a{
    color: #007bff;
    font-size: 12px;
}
.form_container a:hover {
    text-decoration: underline;
}
.checkbox {
    display: flex; 
    column-gap: 8px;
    white-space: nowrap; 
}
.checkbox input {
    accent-color: #007bff;
}
.checkbox label {
    font-size: 12px; 
    cursor: pointer;
    user-select: none;
    color: #0b0217;
}
.form_container .button{
    background: #007bff; 
    margin-top: 30px; 
    width: 100%; 
    padding: 10px 0; 
    border-radius: 10px; 
    color: white;
}
.login_signup {
    font-size: 12px; 
    text-align: center; 
    margin-top: 15px;
}

/* Add this CSS to style the popup */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
}

.modal-content {
  background-color: #fff;
  text-align: center;
  padding: 20px;
  border-radius: 5px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.close {
  color: #aaa;
  float: right;
  font-size: 24px;
  font-weight: bold;
  cursor: pointer;
}

.close:hover {
  color: #000;
}

/* Add this CSS to your existing <style> section or external stylesheet */

/* Style the custom button */
.custom-btn {
  display: inline-block; /* Display the button as an inline element */
  padding: 10px 30px; /* Adjust padding for width and height */
  font-size: 20px; /* Change the font size */
  font-family: 'Montserrat', sans-serif; /* Change the font family */
  background-color: #007bff; /* Change the background color */
  color: #fff; /* Change the text color */
  border: none; /* Remove the border */
  border-radius: 5px; /* Add rounded corners */
  text-decoration: none; /* Remove underlines from links */
  transition: background-color 0.3s ease; /* Add a smooth transition for background color */
  margin-top: 180px;
}

/* Style the button on hover */
.custom-btn:hover {
  background-color: #0056b3; /* Change the background color on hover */
}

/* Style for the "How to use CarParko?" section */
/* Add this CSS to style the "How to use CarParko?" section */
.how-to-use-section {
  background-color: white; /* Set the background color to white */
  padding: 40px 0; /* Adjust the padding as needed */
  position: relative; /* Add this to create a stacking context */
  z-index: 2; /* Set a higher z-index to make it appear above the background image */
  margin-top: 200px;
}

.how-to-use-section h1 {
  font-size: 40px; /* Adjust the font size as needed */
  margin-bottom: 20px; /* Add spacing below the title */
}

/* Add this CSS to increase the font size of the paragraph text */
.how-to-use-section p {
  font-size: 17px; /* Adjust the font size as needed */
}


        
      </style>
</head>
<body>

    <!-- Header -->
    <!-- <header class="container-fluid bg-dark text-center py-3">
      <h1 class="text-white">CarParko</h1>
    </header> -->
  
  <!-- Navigation Bar -->
  <nav class="navbar navbar-expand navbar-dark">
    <div class="container d-flex justify-content-between align-items-center">
      <ul class="navbar-nav mx-auto">
        <li class="nav-item" style="margin-left:250px">
          <a class="nav-link" href="home">Home</a>
        </li>
        <li class="nav-item" style="margin-left:250px">
          <a class="nav-link" href="locations">About</a>
        </li>
        <li class="nav-item" style="margin-left:250px" m>
          <a class="nav-link" href="about">Contact</a>
        </li>
      </ul>
      <button class="button" id="form-open">Login</button>
    </div>
  </nav>

    <!-- Home - login button section -->
    <section class="home">
      <div class="form_container">
        <i class="uil uil-times form_close"></i>
        <!-- Login form -->
        <div class="form login_form show">
          <form action="#">
            <h2>Login</h2>

            <div class="input_box">
              <input type="email" placeholder="Enter your email" required id="signedEmail" value="">
              <i class="uil uil-envelope-alt email"></i>
            </div>
            <div class="input_box">
              <input type="password" placeholder="Enter your password" required id="signedPassword" value="">
              <i class="uil uil-lock password"></i>
              <i class="uil uil-eye-slash pw_hide"></i>
            </div>

            <div class="option_field">
              <span class="checkbox">
                <input type="checkbox" id="rememberMe">
                <label for="rememberMe">Remember me</label>
              </span>
              <a href="#" class="forgot_pw">Forgot password?</a>
            </div>
            
            <button class="button" id="login-button" action="/loggedinhome" method="GET">Login Now</button>

            <div class="login_signup">Don't have an accout? <a href="#" id="signup">Signup</a></div>
          </form>
        </div>


        <!-- Sign Up -->
        <div class="form signup_form show">
          <form action="/signup" method="POST">
            <h2>Signup</h2>

            <div class="input_box">
              <input type="text" placeholder="Enter your name" required id="signupName" value="">
              <i class="uil uil-user-circle user"></i>
            </div>
            <div class="input_box">
              <input type="email" placeholder="Enter your email" required id="signupEmail" value="">
              <i class="uil uil-envelope-alt email"></i>
            </div>
            <div class="input_box">
              <input type="password" placeholder="Create password" required id="signupPassword" value="">
              <i class="uil uil-lock password"></i>
              <i class="uil uil-eye-slash pw_hide"></i>
            </div>
            <div class="input_box">
              <input type="password" placeholder="Confirm password" required id="confirmPassword" value="">
              <i class="uil uil-lock password"></i>
              <i class="uil uil-eye-slash pw_hide"></i>
            </div>

            <!-- Display the error message here -->
            <div id="passwordMismatchError" style="color: red; display: none;">Passwords do not match</div>

            <!-- <a href="/reservedLot" class="button-like-like">Signup Now</a> -->

            <button class="button" type="submit">Signup Now</button>

            <div class="login_signup">Already have an accout? <a href="#" id="login">Login</a></div>

            <!-- Add this div for the popup -->
            <div id="signupSuccessModal" class="modal">
              <div class="modal-content">
                <span class="close" id="closeModal">&times;</span>
                <!-- <p>Your account has been created successfully! Click here to log in.</p> -->
                <p>Your account has been created successfully!</p>
                <!-- <button class="button" id="form-open">Click here to log in</button> -->
                  
              </div>
            </div>
          </form>
        </div>
       
      </div>
    </section>


    <!-- Search Section -->
    <div class="container d-flex justify-content-center mt-4">
      <!-- Use an anchor element to create a link button -->
      <a href="/locations" class="custom-btn">Start Searching Here</a>
    </div>

<!-- how to use section -->
    <section class="how-to-use-section">
      <div class="container test-center">
        <h1>How to use CarParko?</h1>
        <br>
        <h3>New to CarParko?</h3>
        <p>Here is how to use this carpark availability website. 
          Get started by following the steps below! </p> 
        <p>
          <b>Step 1:</b>Click the "Start Searching Here" button on the Home page which will bring you to start
          searching for your destination that you would like to go. 
          <br> 
          <br>
          <b>Step 2:</b>Type in your desired destination into the search bar under "Where would you like to go...". 
          Either press 'Enter' on your keyboard or click on the 'Search' button which will filter through the 
          list of locations to show only your desired location. 
          <br> 
          <br>
          <b>Step 3:</b>Click on the address which will then bring you to the map where you are able to visualise the 
          location better. Hovering over the marker will allow u to know the availability lots of the carpark. 
          <br> 
          <br>
          <b>Step 4:</b>Click on the marker and it will bring you to google map which provides you the GPS service of 
          travelling from one place to the other. 
          <br> 
          <br> 
          <b><i>**Sign up and Log in to use more features!!</i></b>
        </p>
        </p>

      </div>
    </section>




  
    <!-- Footer -->
    <footer class="custom-footer-bg text-light pt-3 pb-2">
      <div class="container text-left text-md-left">
          <div class="row text-left text-md-left">
  
              <div class="col-md-3 col-lg-3 col-xl-3 mx-auto mt-1">
                  <h5 class="text-uppercase mb-4 font-weight-bold text-info">CarParko</h5>
                  <hr class="mb-4">
                  <p>Getting you closer to the next step of having a better parking experience. Convenience
                    and hassle free. 
                  </p>
  
              </div>
  
              <div class="col-md-2 col col-lg-2 col-xl-2 mx-auto mt-1">
                  <h5 class="text-uppercase mb-4 font-weight-bold text-info">Account</h5>
                  <hr class="mb-4">
                  
                  <p>
                      <a href="#" class="text-light" style="text-decoration: none;">Profile</a>
                  </p>
                  <p>
                      <a href="#" class="text-light" style="text-decoration: none;">Settings</a>
                  </p>
                  <p>
                      <a href="#" class="text-light" style="text-decoration: none;">Billing</a>
                  </p>
              </div>
  
              <div class="col-md-2 col col-lg-2 col-xl-2 mx-auto mt-1">
                  <h5 class="text-uppercase mb-4 font-weight-bold text-info">Company</h5>
                  <hr class="mb-4">
                  <p>
                      <a href="#" class="text-light" style="text-decoration: none;">Help Center</a>
                  </p>
                  <p>
                      <a href="#" class="text-light" style="text-decoration: none;">Support</a>
                  </p>
                  <p>
                      <a href="#" class="text-light" style="text-decoration: none;">Privacy Statement</a>
                  </p>
                  <p>
                    <a href="#" class="text-light" style="text-decoration: none;">Terms of use</a>
                </p>
              </div>
  
  
              <div class="col-md-4 col-lg-3 col-xl-3 mx-auto mt-1">
                  <h5 class="text-uppercase mb-4 font-weight-bold text-info">Contacts</h5>
                  <hr class="mb-4">
                  <p>
                      <li class="fas fa-home mr-3">Based in Singapore </li>
                  </p>
                  <p>
                      <li class="fas fa-envelope mr-3">Email: carparko@gmail.com</li>
                  </p>
                  <p>
                      <li class="fas fa-phone mr-3">Tel: +65 6389 7837</li>
                  </p>
                  <p>
                      <li class="fas fa-print mr-3">Fax: +65 8273 8373</li>
                  </p>
              </div>
          </div>
  
              <hr class="mb-4">
              <div class="row d-flex justify-content-center">
                  <div> 
                      <p> 
                          Copyright 2023 All Rights Reserved By:
                          <a href="#" style="text-decoration: none;">
                              <strong class="text-info">CarParko</strong>
                          </a>
                      </p>
                  </div>
              </div>
              <div class="row d-flex justify-content-center">
                <div class="text-center">
                  <ul class="list-unstyled list-inline">
                    <li class="list-inline-item">
                      <a href="#" class="text-light"><i class='bx bxl-facebook' ></i></a>
                  </li>
                  <li class="list-inline-item">
                      <a href="#" class="text-light"><i class='bx bxl-instagram'></i></a>
                  </li>
                  <li class="list-inline-item">
                      <a href="#" class="text-light"><i class='bx bxl-google' ></i></a>
                  </li>
                  <li class="list-inline-item">
                      <a href="#" class="text-light"><i class='bx bxl-linkedin' ></i></a>
                  </li>
                  <li class="list-inline-item">
                      <a href="#" class="text-light"><i class='bx bxl-youtube' ></i></a>
                  </li>
                  </ul>
                </div>
              </div>
  
          </div>
      </div>
  
    </footer>

    <script>
      const formOpenBtn = document.querySelector("#form-open"),
      home = document.querySelector(".home"),
      formContainer = document.querySelector(".form_container"),
      formCloseBtn = document.querySelector(".form_close"),
      signupBtn = document.querySelector("#signup"),
      signupForm = document.querySelector(".signup_form"),
      loginBtn = document.querySelector("#login"),
      loginForm = document.querySelector(".login_form"),
      pwShowHide = document.querySelectorAll(".pw_hide"),
      modalContent = document.querySelector(".model-content"),
      modal = document.getElementById("signupSuccessModal"),
      closeModalBtn = document.getElementById("closeModal");
     
      // Assuming the user has successfully signed up
      const signupEmailInput = document.getElementById('signupEmail');
      const signupPasswordInput = document.getElementById('signupPassword');
      const confirmPasswordInput = document.getElementById('confirmPassword');
      const passwordMismatchError = document.getElementById("passwordMismatchError");
 
      // New login-related JavaScript code
      const loginEmailInput = document.querySelector('.email input[type="email"]');
      const loginPasswordInput = document.querySelector('.password input[type="password"]');
   
      // Find the login button element by its ID
      const loginButton = document.getElementById('login-button');
      // below for the remembr me function 
      const rememberMeCheckbox = document.getElementById('rememberMe');

      // Check if there is stored data in local storage
      const storedSignupEmail = localStorage.getItem('signupEmail');
      const storedSignupPassword = localStorage.getItem('signupPassword');
      const storedConfirmPassword = localStorage.getItem('confirmPassword');

      // for the Remember Me pop up function 
      // Check if there is stored data in local storage
      const storedLoginEmail = localStorage.getItem('loginEmail');
      const storedLoginPassword = localStorage.getItem('loginPassword');
      const storedRememberMe = localStorage.getItem('rememberMe');

      // below for the Remember Me pop up function 
      // If stored data exists and rememberMe is checked, pre-fill the login form
      if (storedLoginEmail && storedLoginPassword && storedRememberMe === 'true') {
        loginEmailInput.value = storedLoginEmail;
        loginPasswordInput.value = storedLoginPassword;
        rememberMeCheckbox.checked = true;
      }
      

      // Function for the Remember Me popup to show up 
      function showRememberMePopup(){
        if (rememberMeCheckbox.checked){
          const confirmation = confirm("Do you want your details to be remembered?");
          if (confirmation){
            localStorage.setItem('loginEmail', loginEmailInput.value);
            localStorage.setItem('loginPassword', loginPasswordInput.value);
            localStorage.setItem('rememberMe', 'true');
          }else{
            localStorage.removeItem('loginEmail');
            localStorage.removeItem('loginPassword');
            localStorage.setItem('rememberMe', 'false');
          }
        }

      }

      // below has not been implemented as of now. 
      // If stored data exists, pre-fill the login form
      //****Below nothing is stored as of now yet 
      // if (storedSignupEmail && storedSignupPassword && storedConfirmPassword) {
      //   loginEmailInput.value = storedSignupEmail;
      //   loginPasswordInput.value = storedSignupPassword;
      // }


      formOpenBtn.addEventListener("click", () => home.classList.add("show"));
      formCloseBtn.addEventListener("click", () => {
        home.classList.remove("show");
        modal.style.display = "none"; // Hide the modal when closing the form
      });
  
      pwShowHide.forEach(icon => {
        icon.addEventListener("click", () => {
          let getPwInput = icon.parentElement.querySelector("input");
          if(getPwInput.type === "password"){
            getPwInput.type = "text";
            icon.classList.replace("uil-eye-slash", "uil-eye")
          }else{
            getPwInput.type = "password";
            icon.classList.replace("uil-eye", "uil-eye-slash")
          }
        })
      })
  
      
  
      signupBtn.addEventListener("click", (e) => {
        formContainer.classList.add("active");
        // Show the popup when the Signup Now button is clicked 
        modal.style.display = "none";
        signupForm.style.display ="block";
        loginForm.style.display = "none"; // Hide the login form 
         // Reset the input fields
        signupEmailInput.value = "";
        signupPasswordInput.value = "";
        confirmPasswordInput.value = "";
      });
      
      loginBtn.addEventListener("click", (e) => {
        e.preventDefault();
        formContainer.classList.remove("active");
        home.classList.add("show");
        // Show the login form when the "login" button is clicked 
        signupForm.style.display = "none"; // Hide the signup form 
        loginForm.style.display = "block"; 
        // Reset the input fields
        signedEmailInput.value = "";
        signedPasswordInput.value = "";
      });
  
      // Add an event listener for the signup form submission
      signupForm.addEventListener("submit", (e) => {
        e.preventDefault();
        // Store the email and password in local storage
        // localStorage.setItem("savedEmail", signupEmailInput);
        // localStorage.setItem("savedPassword", signupPasswordInput);
        const signupPasswordInput = document.getElementById("signupPassword").value;
        if (signupPasswordInput !== confirmPasswordInput.value) {
          passwordMismatchError.style.display = "block"; // Display the error message
        } else {
            // Passwords match, you can proceed with form submission
            // Reset the error message if previously shown
            passwordMismatchError.style.display = "none";

            // Perform other form submission actions here
            // formContainer.classList.add("active");
          // Show the popup when the Signup Now button is clicked
            modal.style.display = "block";
        }
      });


    // Add a click event listener to the login button
      loginButton.addEventListener('click', () => {
        // show the 'Remember Me' popup when the login button is clicked 
        showRememberMePopup();
        // Redirect the user to the loggedin route
        window.location.href = '/loggedinhome';
      });
  
  
      closeModalBtn.addEventListener("click", function() {
        home.classList.add("show"); // Hide the form and the modal when clicking 'x' in the modal
        modal.style.display = "none";
        formContainer.classList.add("active");
        // Show the login form when closing the popup with 'x'
        signupForm.style.display = "none";
        loginForm.style.display = "block";
        // home.classList.remove("show");
      });

      
      
      // Close the modal if the user clicks outside of it
      window.addEventListener("click", function(event) {
        if (event.target === modal) {
          home.classList.remove("show"); // Hide the form and the modal when clicking 'x' in the modal
          modal.style.display = "none";
          formContainer.classList.remove("active"); // Show the login form
          // Show the login form when clicking ouside the modal 
          signupForm.style.display = 'none';
          loginForm.style.display = "block";
        }
      });
      
      modalContent.addEventListener("click", () => {
        home.classList.add("show"); // Hide the form
        modal.style.display = "none"; // Hide the modal
        formContainer.classList.add("active"); // Show the login form
        // Show the login form when clicking ouside the modal 
        signupForm.style.display = 'none';
          loginForm.style.display = "block";
      });


      document.querySelector('form').addEventListener('submit', async (e) => {
        e.preventDefault();
        const name = document.getElementById('signupName').value;
        const email = document.getElementById('signupEmail').value;
        const password = document.getElementById('signupPassword').value;
        
        const response = await fetch('/signup', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ name, email, password }),
        });
        if (response.ok) {
        // Account created successfully
        // You can show a success message or redirect the user
        // For example, display the success modal:
        document.getElementById('signupSuccessModal').style.display = 'block';
      } else {
        // Handle errors, such as displaying an error message on the page
        console.error('Error creating an account');
      }
    });
    
  
    </script>

  
  </body>
</html>

